1. an error
question: 
 ipauser login freeipa client without home dir
resolve: 
 #cheak whether the packages oddjob oddjob-mkhomedir have been installed ,if not,install them #
 rpm -qa|grep oddjob
 
 #启用用户登录时自建家目录功能#
 authconfig --enablemkhomedir --update 
 
 #restart service it will create home directory for freeipa user#
 systemctl restart oddjobd 
 systemctl restart dbus
 

#######centos7.x进入单用户模式修改root密码#######
 开机进入grub菜单栏，选择kernel 输入e进入grub页面进行编辑
 找到linux16 开头的一行 在最后面追加 init=/bin/sh; 若是7.0的系统需要删除rhgb与quiet参数,7.0以后的系统不需要删除
 根据提示使用 Ctrl+x start
 mount -o remount,rw /  ##重新挂着/目录获得rw权限
 password user
 touch /.autorelabel    ##重置所有selinux标签，使selinux生效
 exec /sbin/init
 
 
 
########modify grub2 arguments with two methods########
1. using grubby tool
#list all the kernel entries present#
[root@demo centos]# grubby --info=ALL
index=0
kernel=/boot/vmlinuz-3.10.0-862.11.6.el7.x86_64
args="ro vconsole.keymap=us crashkernel=auto  vconsole.font=latarcyrheb-sun16 rhgb quiet net.ifnames=0 biosdevname=0 "
root=UUID=be326776-8063-448e-902f-471e1d060a75
initrd=/boot/initramfs-3.10.0-862.11.6.el7.x86_64.img
title=CentOS Linux (3.10.0-862.11.6.el7.x86_64) 7 (Core)
index=1
kernel=/boot/vmlinuz-3.10.0-123.el7.x86_64
args="ro vconsole.keymap=us crashkernel=auto  vconsole.font=latarcyrheb-sun16 rhgb quiet net.ifnames=0 biosdevname=0 "
root=UUID=be326776-8063-448e-902f-471e1d060a75
initrd=/boot/initramfs-3.10.0-123.el7.x86_64.img
title=CentOS Linux (3.10.0-123.el7.x86_64) 7 (Core)
index=2
kernel=/boot/vmlinuz-0-rescue-6cdb8fc6666949c09e5e2344f3a204bc
args="ro vconsole.keymap=us crashkernel=auto  vconsole.font=latarcyrheb-sun16 rhgb quiet net.ifnames=0 biosdevname=0 "
root=UUID=be326776-8063-448e-902f-471e1d060a75
initrd=/boot/initramfs-0-rescue-6cdb8fc6666949c09e5e2344f3a204bc.img
title=CentOS Linux (0-rescue-6cdb8fc6666949c09e5e2344f3a204bc) 7 (Core)
index=3
non linux entry

the --update-kernel option can be used to update a menu entry when used in combination with:
--args:to add new arguments
--remove-args:to remove existing arguments.

#remove the "rhgb quiet" arguments#
[root@demo centos]# grubby --remove-args "rhgb quiet" --update-kernel /boot/vmlinuz-3.10.0-862.11.6.el7.x86_64

#add an argument#
[root@demo centos]# grubby --args "rhgb quiet" --update-kernel /boot/vmlinuz-3.10.0-862.11.6.el7.x86_64

2. modify parameters defined in /etc/default/grub
[root@demo ~]# cat /etc/default/grub
GRUB_TIMEOUT=6           ## we have modified this from 6 seconds to 6 seconds
GRUB_DISTRIBUTOR="$(sed 's, release .*$,,g' /etc/system-release)"
GRUB_DEFAULT=saved
GRUB_DISABLE_SUBMENU=true
GRUB_TERMINAL_OUTPUT="console"
GRUB_CMDLINE_LINUX="vconsole.keymap=us crashkernel=auto  vconsole.font=latarcyrheb-sun16 rhgb quiet net.ifnames=0 biosdevname=0"
GRUB_DISABLE_RECOVERY="true"

#rebuild the grub.cfg by use grub2-mkconfig command#
[root@demo ~]# grub2-mkconfig -o /boot/grub2/grub.cfg

########bash 字符串切割########
[liurui@vstjlinuxtrans1 ~]$ sudo su -
Last login: Mon Jun 29 17:07:23 CST 2020 on pts/0
[root@vstjlinuxtrans1 ~]# who am i
liurui   pts/0        2020-06-29 17:17 (10.67.124.145)
[root@vstjlinuxtrans1 ~]# from=`who am i`
[root@vstjlinuxtrans1 ~]# echo $from
liurui pts/0 2020-06-29 17:17 (10.67.124.145)
[root@vstjlinuxtrans1 ~]# echo ${from%% *}
liurui
You have new mail in /var/spool/mail/root
[root@vstjlinuxtrans1 ~]# echo ${from%%2020*}
liurui pts/0
[root@vstjlinuxtrans1 ~]# echo ${from##liurui}
pts/0 2020-06-29 17:17 (10.67.124.145)
[root@vstjlinuxtrans1 ~]# echo ${from##*pts}
/0 2020-06-29 17:17 (10.67.124.145)


#######while可以联合输入重定向 < 一起使用#######
[root@demo liurui]# cat file1
1111
2222
3333
4444
[root@demo liurui]# while read num;do echo "this is:$num";done< file1
this is:1111
this is:2222
this is:3333
this is:4444

[root@demo liurui]# cat file2
aaaa
bbbb
cccc
dddd
[root@demo liurui]# while read num;do echo "this is: $num";done< <(cat file1 file2)
this is: 1111
this is: 2222
this is: 3333
this is: 4444
this is: aaaa
this is: bbbb
this is: cccc
this is: dddd

[root@demo liurui]#  while read username var;do echo "用户名：$username";done< <(cat /etc/passwd|awk -F':' '{print $1}')
用户名：root
用户名：bin
用户名：daemon
用户名：adm
用户名：lp
用户名：sync
用户名：shutdown
用户名：halt
......
[root@demo liurui]# cat username.sh
#!/bin/bash
#从/etc/passwd文件中读取用户名并输出
IFS=":"     #设置分隔符为:
oldIFS=$IFS #IFS是文件内部分隔符
while  read username var #var变量不可少,如果我们写成while read username那么username的值等于passwd文件这一整行的内容（IFS=”:”也就不起作用了）
do
    echo "用户名:$username"
done < /etc/passwd
IFS=$oldIFS

#临时追加但不写入#
[root@demo liurui]# cat /etc/resolv.conf <(echo nameserver 10.67.50.111)
# Generated by NetworkManager
nameserver 8.8.8.8
nameserver 10.67.50.111
[root@demo liurui]# cat /etc/resolv.conf
# Generated by NetworkManager
nameserver 8.8.8.8


########Linux服务器配置辅助日志，记录用户切换root账号所有操作记录#######
[root@repo-centos ~]# cat /etc/profile.d/2ndlog.sh
#!/bin/bash
if [[ `tty` ]]
then
        From=`who am i`
        From=${From%% *}
        To=`whoami`
        File="$From:$To"

        export HISTTIMEFORMAT='%x - %H:%M:%S '
        export HISTSIZE=10000

    # make the history log directory if necessary
        if [ ! -d /var/log/history/$To ]
        then
                /bin/mkdir -p /var/log/history/$To
        fi

        # make sure the permissions are suitable
        /bin/chmod 700 /var/log/history/$To

    # create the file and set the atributes to append only so users can't
    # modify their own logs
        if [ ! -f /var/log/history/$To/.sh_history.$File ]
        then
                /bin/touch /var/log/history/$To/.sh_history.$File
        if [ $To == root ]
        then
                /usr/bin/chattr +a /var/log/history/$To/.sh_history.$File
        fi
    fi
    export HISTFILE=/var/log/history/$To/.sh_history.$File
fi

#查看用户切换到root后的history文件#
[root@vstjlinuxtrans1 root]# pwd
/var/log/history/root

[root@vstjlinuxtrans1 root]# ll -a
total 440
drwx------. 2 root root   4096 Dec  9  2019 .
drwxr-xr-x. 3 root root     17 Apr 26  2017 ..
-rw-r--r--  1 root root  23072 Jun 29 10:03 .sh_history.chaofeng:root
-rw-r--r--  1 root root  35244 Jun 29 16:46 .sh_history.chensen:root
-rw-r--r--  1 root root  26303 Dec  9  2019 .sh_history.chensen:root~
-rw-r--r--  1 root root 129173 Jun 29 17:07 .sh_history.liurui:root
-rw-r--r--. 1 root root      0 Apr 26  2017 .sh_history.:root
-rw-r--r--. 1 root root  61156 Jun 29 14:36 .sh_history.root:root
-rw-r--r--  1 root root  16736 Jun 11 09:47 .sh_history.shuaibo:root
-rw-r--r--  1 root root 128734 Jun 23 13:25 .sh_history.yushuang:root
-rw-r--r--  1 root root   3030 Jun  1 15:47 .sh_history.yuxue:root

[root@vstjlinuxtrans1 root]# history -r .sh_history.liurui\:root
[root@vstjlinuxtrans1 root]# history
    1  05/16/2019 - 13:58:41 ssh 10.67.51.50
    2  05/16/2019 - 13:59:50 ssh 10.67.51.28
    3  05/16/2019 - 14:00:29 ssh 10.67.51.213
    4  05/16/2019 - 14:01:47 cd
    5  05/16/2019 - 14:02:14 ssh 10.67.50.124
    6  05/16/2019 - 14:02:49 ssh 10.67.50.223
    7  05/16/2019 - 14:03:32 ssh 10.67.50.107
    8  05/16/2019 - 14:04:29 ssh 10.67.51.29
    9  05/16/2019 - 14:05:33 ssh 10.67.51.108
   10  05/16/2019 - 14:05:45 ssh 10.67.50.108
   11  05/16/2019 - 14:06:37 ssh 10.67.49.56
   12  05/16/2019 - 14:06:41 ssh 10.67.49.86
   13  05/16/2019 - 14:07:20 ssh 10.67.49.87
   .....


#########查看文件系统使用率大于40%的###########
[root@repo-centos ~]# while read num t;do [ ${num%%%} -gt 40 ] && echo $num $t;done< <(df --output=pcent,target |tail -n +2)
48% /mrepo 

###ansible 远程执行本地脚本，不需要拷贝到远程服务器###
ansible OC6 -m script -a '/root/scripts/add_2ndlog.sh'

###ssh远程执行本地脚本，不需要登录和拷贝###
ssh -T user@host < local.sh


########shell脚本中简单获取随机密码########
#方法一#
[root@demo liurui]# cat /dev/urandom |head -1|md5sum|head -c 5
46b3b
#方法二#
[root@demo liurui]# echo $RANDOM|md5sum
52ae73ae115890457a1e72876f7da79e  -
[root@demo liurui]# echo $RANDOM|md5sum|head -c 5
c2fd5
[root@demo liurui]# echo $RANDOM|md5sum|cut -c 1-5
cf766
#随机生成数字#
[root@demo liurui]# echo "RANDOM" | cksum | cut -b 1-8
23405618

########压缩与解压缩########
tar -zcvf test.tar.gz test  #-c 建立压缩档案
tar -zxvf file.tar.gz  #-x 解压缩

#############sed###########
#在第N行末尾(a)面追加一行内容#
dsh -f 2.txt -c "sed -i 'N;4a- /var/log/history/root/.sh_history*' /etc/filebeat/filebeat.yml"  ##在第4行下面追加内容- /var/log/history/root/.sh_history*
#在第N行行首往上(i)追加一行内容#
dsh -f 2.txt -c "sed -i 'N;4i- /var/log/history/root/.sh_history*' /etc/filebeat/filebeat.yml"
#\s\{2\} 两个空格#
dsh -f 3.txt -c "sed -i 's/\s\{2\}enabled: false/enabled: true/g' /etc/filebeat/filebeat.yml"
#\s 匹配空格 #
cat -n /etc/filebeat/filebeat.yml|egrep -A2 '\senabled: true'

